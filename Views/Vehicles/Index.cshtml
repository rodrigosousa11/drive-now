@using PagedList.Core
@model IPagedList<DriveNow.Models.Vehicle>

@{
    ViewData["Title"] = "Vehicles";
}

<div class="d-flex justify-content-between align-items-center mb-3">
    <h3 class="mb-0">Vehicles</h3>
    <a asp-action="Create" class="btn btn-success btn-sm">
        <i class="bi bi-plus-lg"></i> Add Vehicle
    </a>
</div>

<div class="table-responsive shadow-sm rounded" style="max-height: 90vh; overflow-y: auto;">
    <table class="table table-striped table-hover align-middle mb-0">
        <thead class="table-dark sticky-top" style="background-color: #e9ecef;">
            <tr>
                <th>@Html.DisplayNameFor(model => model[0].Brand)</th>
                <th>@Html.DisplayNameFor(model => model[0].Model)</th>
                <th>@Html.DisplayNameFor(model => model[0].LicensePlate)</th>
                <th>@Html.DisplayNameFor(model => model[0].ManufactureYear)</th>
                <th>@Html.DisplayNameFor(model => model[0].FuelType)</th>
                <th>Status</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @if (Model.Count == 0)
            {
                <tr>
                    <td colspan="7" class="text-center text-muted">
                        No vehicles found.
                    </td>
                </tr>
            }
            else
            {
                foreach (var item in Model)
                {
                    <tr style="cursor:pointer;" onclick="location.href='@Url.Action("Details", "Vehicles", new { id = item.Id })'">
                        <td>@Html.DisplayFor(modelItem => item.Brand)</td>
                        <td>@Html.DisplayFor(modelItem => item.Model)</td>
                        <td>@Html.DisplayFor(modelItem => item.LicensePlate)</td>
                        <td>@Html.DisplayFor(modelItem => item.ManufactureYear)</td>
                        <td>@Html.DisplayFor(modelItem => item.FuelType)</td>
                        <td>
                            @if (item.IsRented)
                            {
                                <span class="badge bg-secondary d-inline-block text-center" style="min-width: 75px;">Rented</span>
                            }
                            else
                            {
                                <span class="badge bg-light text-dark border d-inline-block text-center" style="min-width: 75px;">Available</span>
                            }
                        </td>
                        <td class="text-end">
                            <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-outline-secondary btn-sm">Edit</a>
                            <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-outline-danger btn-sm">Delete</a>
                        </td>
                    </tr>
                }
            }
        </tbody>

    </table>
</div>

<nav aria-label="Page navigation" class="mt-3">
    <ul class="pagination pagination-sm justify-content-center">
        @if (Model.HasPreviousPage)
        {
            <li class="page-item">
                <a class="page-link text-dark" asp-action="Index" asp-route-page="@(Model.PageNumber - 1)">Previous</a>
            </li>
        }
        else
        {
            <li class="page-item disabled">
                <span class="page-link text-dark">Previous</span>
            </li>
        }

        @for (int i = 1; i <= Model.PageCount; i++)
        {
            if (i == Model.PageNumber)
            {
                <li class="page-item active">
                    <span class="page-link" style="color: black; background-color: #dee2e6; border-color: #dee2e6;">@i</span>
                </li>

            }
            else
            {
                <li class="page-item">
                    <a class="page-link text-dark" asp-action="Index" asp-route-page="@i">@i</a>
                </li>
            }
        }

        @if (Model.HasNextPage)
        {
            <li class="page-item">
                <a class="page-link text-dark" asp-action="Index" asp-route-page="@(Model.PageNumber + 1)">Next</a>
            </li>
        }
        else
        {
            <li class="page-item disabled">
                <span class="page-link text-dark">Next</span>
            </li>
        }
    </ul>

</nav>
