@using PagedList.Core
@model IPagedList<DriveNow.Models.RentalContract>
@inject Microsoft.AspNetCore.Mvc.Localization.IViewLocalizer Localizer

@{
    ViewData["Title"] = Localizer["RentalContractsTitle"];
}

<div class="d-flex justify-content-between align-items-center mb-3">
    <h3 class="mb-0">@Localizer["RentalContractsTitle"]</h3>
    <a asp-action="Create" class="btn btn-success btn-sm">
        <i class="bi bi-plus-lg"></i> @Localizer["NewContract"]
    </a>
</div>

<div class="table-responsive shadow-sm rounded" style="max-height: 90vh; overflow-y: auto;">
    <table class="table table-striped table-hover align-middle mb-0">
        <thead class="table-dark sticky-top" style="background-color: #e9ecef;">
            <tr>
                <th>@Localizer["Customer"]</th>
                <th>@Localizer["Vehicle"]</th>
                <th>@Localizer["StartDate"]</th>
                <th>@Localizer["EndDate"]</th>
                <th>@Localizer["InitialMileage"]</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @if (Model.Count == 0)
            {
                <tr>
                    <td colspan="6" class="text-center text-muted">
                        @Localizer["NoContractsFound"]
                    </td>
                </tr>
            }
            else
            {
                foreach (var item in Model)
                {
                    <tr style="cursor:pointer;" onclick="location.href='@Url.Action("Details", "RentalContract", new { id = item.Id })'">
                        <td>@item.Customer?.FullName</td>
                        <td>@item.Vehicle?.LicensePlate</td>
                        <td>@item.StartDate.ToShortDateString()</td>
                        <td>@item.EndDate.ToShortDateString()</td>
                        <td>@item.InitialMileage</td>
                        <td class="text-end">
                            <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-outline-secondary btn-sm">@Localizer["Edit"]</a>
                            <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-outline-danger btn-sm">@Localizer["Delete"]</a>
                        </td>
                    </tr>
                }
            }
        </tbody>
    </table>
</div>

@if (Model.PageCount > 1)
{
    <nav aria-label="Page navigation" class="mt-3">
        <ul class="pagination pagination-sm justify-content-center">
            @if (Model.HasPreviousPage)
            {
                <li class="page-item">
                    <a class="page-link text-dark" asp-action="Index" asp-route-page="@(Model.PageNumber - 1)">@Localizer["Previous"]</a>
                </li>
            }
            else
            {
                <li class="page-item disabled">
                    <span class="page-link text-dark">@Localizer["Previous"]</span>
                </li>
            }

            @for (int i = 1; i <= Model.PageCount; i++)
            {
                if (i == Model.PageNumber)
                {
                    <li class="page-item active">
                        <span class="page-link" style="color: black; background-color: #dee2e6; border-color: #dee2e6;">@i</span>
                    </li>
                }
                else
                {
                    <li class="page-item">
                        <a class="page-link text-dark" asp-action="Index" asp-route-page="@i">@i</a>
                    </li>
                }
            }

            @if (Model.HasNextPage)
            {
                <li class="page-item">
                    <a class="page-link text-dark" asp-action="Index" asp-route-page="@(Model.PageNumber + 1)">@Localizer["Next"]</a>
                </li>
            }
            else
            {
                <li class="page-item disabled">
                    <span class="page-link text-dark">@Localizer["Next"]</span>
                </li>
            }
        </ul>
    </nav>
}
